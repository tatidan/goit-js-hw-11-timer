{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","days","document","querySelector","hours","mins","secs","start","setInterval","currentTime","Date","now","time","timeComponents","getTimeComponents","updateTimerFace","pad","value","String","padStart","Math","floor","textContent","countdownTimer"],"mappings":";;;AA+CA,aA/CA,QAAA,oBAEA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBA,KAAAA,WAAaA,EACbC,KAAAA,KAAO,CACVC,KAAMC,SAASC,iBAAiBL,yBAChCM,MAAOF,SAASC,iBAAiBL,0BACjCO,KAAMH,SAASC,iBAAiBL,yBAChCQ,KAAMJ,SAASC,iBAAiBL,0BAIpCS,QACEC,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MACnBC,EAAO,KAAKb,WAAaU,EACzBI,EAAiB,KAAKC,kBAAkBF,GACzCG,KAAAA,gBAAgBF,IACpB,KAGLG,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCL,kBAAkBF,GAMT,MAAA,CAAEX,KALI,KAAKe,IAAII,KAAKC,MAAMT,EAAQ,QAK1BR,MAJD,KAAKY,IAAII,KAAKC,MAAOT,EAAQ,MAAyB,OAI9CP,KAHT,KAAKW,IAAII,KAAKC,MAAOT,EAAQ,KAAoB,MAGlCN,KAFf,KAAKU,IAAII,KAAKC,MAAOT,EAAQ,IAAc,OAK1DG,iBAAgB,KAAEd,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IAC9BN,KAAAA,KAAKC,KAAKqB,eAAiBrB,IAC3BD,KAAAA,KAAKI,MAAMkB,eAAiBlB,IAC5BJ,KAAAA,KAAKK,KAAKiB,eAAiBjB,IAC3BL,KAAAA,KAAKM,KAAKgB,eAAiBhB,KAIpC,MAAMiB,EAAiB,IAAI3B,EAAe,CACxCE,SAAU,WACVC,WAAY,IAAIW,KAAK,kBAEvBa,EAAehB","file":"src.a5ac896b.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = targetDate;\n    this.refs = {\n      days: document.querySelector(`${selector} [data-value=\"days\"]`),\n      hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\n      mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\n      secs: document.querySelector(`${selector} [data-value=\"secs\"]`),\n    };\n  }\n\n  start() {\n    setInterval(() => {\n      const currentTime = Date.now();\n      const time = this.targetDate - currentTime;\n      const timeComponents = this.getTimeComponents(time);\n      this.updateTimerFace(timeComponents);\n    }, 1000);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  updateTimerFace({ days, hours, mins, secs }) {\n    this.refs.days.textContent = `${days}`;\n    this.refs.hours.textContent = `${hours}`;\n    this.refs.mins.textContent = `${mins}`;\n    this.refs.secs.textContent = `${secs}`;\n  }\n}\n\nconst countdownTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2021'),\n});\ncountdownTimer.start();\n"]}